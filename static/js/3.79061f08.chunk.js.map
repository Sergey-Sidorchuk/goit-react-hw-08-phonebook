{"version":3,"sources":["../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","Components/Form/Form.module.css","Components/Filter/Filter.module.css","Components/Contact/Contact.module.css","Components/Contacts/Contacts.module.css","Components/Phonebook/Phonebook.module.css","Components/Form/Form.js","Components/Filter/Filter.js","Components/Contact/Contact.js","Components/Contacts/Contacts.js","Components/Loader/Loader.js","Components/Phonebook/Phonebook.js","views/ContactsView.js"],"names":["_slicedToArray","arr","i","Array","isArray","Symbol","iterator","Object","_arr","_n","_d","_e","undefined","_s","_i","next","done","push","value","length","err","unsupportedIterableToArray","TypeError","module","exports","Form","dispatch","useDispatch","contacts","useSelector","contactsSelectors","getContacts","useState","name","setName","number","setNumber","handleChange","event","currentTarget","className","style","form","onSubmit","preventDefault","map","contact","includes","alert","contactsOperations","addContact","label","input","type","pattern","title","required","onChange","btn","typy","Filter","filter","getFilter","filterContact","target","Contact","onDeleteContact","onClick","Contacts","getVisibleContacts","list","id","item","deleteContact","Loader","borderTopColor","Phonebook","isLoading","contactsSelector","getLoading","useEffect","fetchContacts","styles","bar","ContactsView","params","Container"],"mappings":"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","file":"static/js/3.79061f08.chunk.js","sourcesContent":["import arrayWithHoles from \"@babel/runtime/helpers/esm/arrayWithHoles\";\nimport iterableToArrayLimit from \"@babel/runtime/helpers/esm/iterableToArrayLimit\";\nimport unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nimport nonIterableRest from \"@babel/runtime/helpers/esm/nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"Form_form__15zI-\",\"label\":\"Form_label__1zX3H\",\"input\":\"Form_input__2u3cu\",\"btn\":\"Form_btn__1A_s9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"Filter_label__vYL6s\",\"input\":\"Filter_input__1J45Z\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"name\":\"Contact_name__fSt1S\",\"btn\":\"Contact_btn__1VrmJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"Contacts_list__2AU3e\",\"item\":\"Contacts_item__1eq9_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"bar\":\"Phonebook_bar__1USYd\"};","import { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport contactsOperations from '../../redux/contacts/operation';\nimport contactsSelectors from '../../redux/contacts/selectors';\nimport style from './Form.module.css'\n\nexport default function Form() {\n    const dispatch = useDispatch();\n    const contacts = useSelector(contactsSelectors.getContacts);\n    const [name, setName] = useState('');\n    const [number, setNumber] = useState('');\n    \n    // console.log(contacts);\n\n    const handleChange = event => {\n        const { name, value } = event.currentTarget;\n\n        switch (name) {\n            case 'name':\n                setName(value);\n                break;\n            \n            case 'number':\n                setNumber(value);\n                break;\n            \n            default:\n                return;\n        }\n    };\n\n    const hadleSubmit = event => {\n        event.preventDefault();\n\n        if (!name || !number) {\n            return;\n        }\n\n        if (contacts.map(contact => contact.name).includes(name)) {\n            return alert(`${name} is already in contacs.`)\n        }\n\n        dispatch(contactsOperations.addContact({ name, number }));\n        setName('');\n        setNumber('');\n    };\n    \n        return (\n            <form className={style.form} onSubmit={hadleSubmit}>\n                <label className={style.label}>\n                Name\n                <input\n                    className={style.input}\n                    type=\"text\"\n                    name=\"name\"\n                    pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n                    title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n                    required\n                    value={name}\n                    onChange={handleChange}\n                    // id={nameInputId}\n                />\n                </label>\n\n                <label className={style.label}>\n                Number\n                <input\n                    className={style.input}\n                    type=\"tel\"\n                    name=\"number\"\n                    pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n                    title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n                    required\n                    value={number}\n                    onChange={handleChange}\n                    // id={numberInpntId}\n                />\n                </label>\n\n                <button className={style.btn} typy=\"submit\">Add contact</button>\n            </form>\n        )\n    }\n\n","import { useDispatch, useSelector } from 'react-redux';\nimport { filterContact } from '../../redux/contacts';\nimport contactsSelectors from '../../redux/contacts/selectors';\nimport style from './Filter.module.css';\n\nconst Filter = () => {\n    const dispatch = useDispatch();\n    const filter = useSelector(contactsSelectors.getFilter);\n\n    const onChange = event => dispatch(filterContact(event.target.value));\n\n    return (\n        <label className={style.label}>\n            Find contacts by name\n            <input className={style.input} type=\"text\" onChange={onChange} value={filter} name=\"filter\" />\n        </label>\n\n    )\n    \n};\n\nexport default Filter;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport style from './Contact.module.css';\n\nconst Contact = ({name, number, onDeleteContact}) => (  \n    <>\n        <p className={style.name}>\n            {name}: <span>{number}</span>\n        </p>\n        <button className={style.btn} onClick={onDeleteContact}>\n            Delete\n        </button>\n    </>\n);\n\nContact.propTypes = {\n    name: PropTypes.string.isRequired,\n    number: PropTypes.string.isRequired,\n    onDeleteContact: PropTypes.func.isRequired,\n};\n\nexport default Contact;","import React from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport {contactsOperations, contactsSelectors } from '../../redux/contacts';\nimport Contact from '../Contact/Contact';\nimport style from './Contacts.module.css'\n\nconst Contacts = () => {\n    const dispatch = useDispatch();\n    const contacts = useSelector(contactsSelectors.getVisibleContacts);\n    const onDeleteContact = id => dispatch(contactsOperations.deleteContact(id));\n\n    return (\n        <ul className={style.list}>\n        {contacts.map(({ id, name, number }) => (\n            <li key={id} className={style.item}>\n                <Contact\n                    name={name}\n                    number={number}\n                    onDeleteContact={() => onDeleteContact(id)}\n                    />\n            </li>\n        ))}\n        \n    </ul>\n    )\n    \n};\n\nexport default Contacts;","import React from 'react';\n\nconst Loader = () => {\n    return (\n    <div className=\"text-center\">\n        <div\n            style={{\n                borderTopColor: 'transparent',\n            }}\n            className=\"border-solid animate-spin  rounded-full border-blue-400 border-8 h-20 w-20\"\n            />\n            \n            ... Loading\n        </div>\n    );\n}\n\nexport default Loader;","import { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport contactsOperations from '../../redux/contacts/operation';\nimport contactsSelector from '../../redux/contacts/selectors';\n\nimport Form from '../Form';\nimport Filter from '../Filter';\nimport Contacts from '../Contacts';\nimport Loader from '../Loader';\nimport styles from './Phonebook.module.css'\n\nexport default function Phonebook() {\n    const dispatch = useDispatch();\n    const isLoading = useSelector(contactsSelector.getLoading);\n\n    useEffect(() => {\n        dispatch(contactsOperations.fetchContacts());\n    }, [dispatch]);\n\n    return (\n        <div className={styles.bar}>\n            <h1>Phonebook</h1>\n            <Form />\n\n            {isLoading ? (\n                <>\n                    <h2>Contacts</h2>\n                    <Filter />\n                    <Contacts />\n                </>\n            ) : (\n                <Loader />\n            )}\n        </div>\n\n    )\n\n}","import { useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\nimport Container from '../Components/Container';\nimport Phonebook from '../Components/Phonebook';\nimport { contactsOperations } from '../redux/contacts';\n\nexport default function ContactsView(params) {\n    const dispatch = useDispatch();\n    // const isLoadingContacts = useSelector(contactsSelectors.getLoading);\n\n    useEffect(() => dispatch(contactsOperations.fetchContacts()), [dispatch]);\n    \n    return (\n        <Container>\n            <Phonebook />\n        </Container>\n    );\n};"],"sourceRoot":""}