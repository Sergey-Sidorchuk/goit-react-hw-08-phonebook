{"version":3,"sources":["views/Styles.module.css","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","views/LoginView.js"],"names":["module","exports","_slicedToArray","arr","i","Array","isArray","Symbol","iterator","Object","_arr","_n","_d","_e","undefined","_s","_i","next","done","push","value","length","err","unsupportedIterableToArray","TypeError","LoginView","dispatch","useDispatch","useState","email","setEmail","password","setPassword","handleChange","target","name","onSubmit","e","preventDefault","authOperations","logIn","className","styles","form","autoComplete","label","type","onChange"],"mappings":"kIACAA,EAAOC,QAAU,CAAC,UAAY,0BAA0B,MAAQ,sBAAsB,KAAO,qBAAqB,MAAQ,wB,8ECG3G,SAASC,EAAeC,EAAKC,GAC1C,OCLa,SAAyBD,GACtC,GAAIE,MAAMC,QAAQH,GAAM,OAAOA,EDIxB,CAAeA,IELT,SAA+BA,EAAKC,GACjD,GAAsB,qBAAXG,QAA4BA,OAAOC,YAAYC,OAAON,GAAjE,CACA,IAAIO,EAAO,GACPC,GAAK,EACLC,GAAK,EACLC,OAAKC,EAET,IACE,IAAK,IAAiCC,EAA7BC,EAAKb,EAAII,OAAOC,cAAmBG,GAAMI,EAAKC,EAAGC,QAAQC,QAChER,EAAKS,KAAKJ,EAAGK,QAEThB,GAAKM,EAAKW,SAAWjB,GAH8CO,GAAK,IAK9E,MAAOW,GACPV,GAAK,EACLC,EAAKS,EACL,QACA,IACOX,GAAsB,MAAhBK,EAAW,QAAWA,EAAW,SAC5C,QACA,GAAIJ,EAAI,MAAMC,GAIlB,OAAOH,GFnBuB,CAAqBP,EAAKC,IAAM,OAAAmB,EAAA,GAA2BpB,EAAKC,IGLjF,WACb,MAAM,IAAIoB,UAAU,6IHIgF,K,wIIAvF,SAASC,IACpB,IAAMC,EAAWC,cACjB,EAA0BC,mBAAS,IAAnC,mBAAOC,EAAP,KAAcC,EAAd,KACA,EAAgCF,mBAAS,IAAzC,mBAAOG,EAAP,KAAiBC,EAAjB,KAEMC,EAAe,SAAC,GAAiC,IAAD,IAA9BC,OAAUC,EAAoB,EAApBA,KAAMf,EAAc,EAAdA,MACpC,OAAQe,GACJ,IAAK,QACL,OAAOL,EAASV,GAEhB,IAAK,WACL,OAAOY,EAAYZ,GAEnB,QACA,SAWR,OACI,gCACA,+CAEA,uBAAMgB,SAXW,SAAAC,GACjBA,EAAEC,iBACFZ,EAASa,IAAeC,MAAM,CAAEX,QAAOE,cACvCD,EAAS,IACTE,EAAY,KAOkBS,UAAWC,IAAOC,KAAMC,aAAa,MAAnE,UACI,wBAAOH,UAAWC,IAAOG,MAAzB,kBAEI,uBACIC,KAAK,QACLX,KAAK,QACLf,MAAOS,EACPkB,SAAUd,OAIlB,wBAAOQ,UAAWC,IAAOG,MAAzB,qBAEI,uBACIC,KAAK,WACLX,KAAK,WACLf,MAAOW,EACPgB,SAAUd,OAIlB,wBAAQa,KAAK,SAAb","file":"static/js/4.5e5c3ebd.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Styles_container__1OFPa\",\"title\":\"Styles_title__1Wxci\",\"form\":\"Styles_form__274ZI\",\"label\":\"Styles_label__3j26q\"};","import arrayWithHoles from \"@babel/runtime/helpers/esm/arrayWithHoles\";\nimport iterableToArrayLimit from \"@babel/runtime/helpers/esm/iterableToArrayLimit\";\nimport unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nimport nonIterableRest from \"@babel/runtime/helpers/esm/nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { authOperations } from '../redux/auth';\nimport styles from './Styles.module.css';\n\nexport default function LoginView() {\n    const dispatch = useDispatch();\n    const [email, setEmail] = useState('');\n    const [password, setPassword] = useState('');\n\n    const handleChange = ({ target: { name, value } }) => {\n        switch (name) {\n            case 'email':\n            return setEmail(value);\n            \n            case 'password':\n            return setPassword(value);\n            \n            default:\n            return;\n        };\n    };\n\n    const handleSubmit = e => {\n        e.preventDefault();\n        dispatch(authOperations.logIn({ email, password }));\n        setEmail('');\n        setPassword('');\n    };\n\n    return (\n        <div>\n        <h1>Authorization</h1>\n\n        <form onSubmit={handleSubmit} className={styles.form} autoComplete=\"off\">\n            <label className={styles.label}>\n                Email\n                <input\n                    type=\"email\"\n                    name=\"email\"\n                    value={email}\n                    onChange={handleChange}\n                />\n            </label>\n\n            <label className={styles.label}>\n                Password\n                <input\n                    type=\"password\"\n                    name=\"password\"\n                    value={password}\n                    onChange={handleChange}\n                />\n            </label>\n\n            <button type=\"submit\">Sign in</button>\n        </form>\n    </div>\n    );\n};\n"],"sourceRoot":""}