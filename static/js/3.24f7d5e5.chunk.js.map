{"version":3,"sources":["../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","Components/Form/Form.module.css","Components/Filter/Filter.module.css","Components/Contact/Contact.module.css","Components/Contacts/Contacts.module.css","Components/Phonebook/Phonebook.module.css","Components/Form/Form.js","Components/Filter/Filter.js","Components/Contact/Contact.js","Components/Contacts/Contacts.js","Components/Loader/Loader.js","Components/Phonebook/Phonebook.js","views/ContactsView.js"],"names":["_slicedToArray","arr","i","Array","isArray","Symbol","iterator","Object","_arr","_n","_d","_e","undefined","_s","_i","next","done","push","value","length","err","unsupportedIterableToArray","TypeError","module","exports","Form","dispatch","useDispatch","contacts","useSelector","contactsSelectors","getContacts","useState","name","setName","number","setNumber","handleChange","event","currentTarget","className","style","form","onSubmit","preventDefault","map","contact","includes","alert","contactsOperations","addContact","label","input","type","pattern","title","required","onChange","btn","typy","Filter","filter","getFilter","styles","filterContact","target","Contact","onDeleteContact","onClick","Contacts","getVisibleContacts","list","id","item","deleteContact","Loader","borderTopColor","Phonebook","isLoading","contactsSelector","getLoading","useEffect","fetchContacts","bar","ContactsView","params","Container"],"mappings":"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","file":"static/js/3.24f7d5e5.chunk.js","sourcesContent":["import arrayWithHoles from \"@babel/runtime/helpers/esm/arrayWithHoles\";\nimport iterableToArrayLimit from \"@babel/runtime/helpers/esm/iterableToArrayLimit\";\nimport unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nimport nonIterableRest from \"@babel/runtime/helpers/esm/nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"Form_form__15zI-\",\"label\":\"Form_label__1zX3H\",\"input\":\"Form_input__2u3cu\",\"btn\":\"Form_btn__1A_s9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"Filter_input__1J45Z\",\"label\":\"Filter_label__vYL6s\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"name\":\"Contact_name__fSt1S\",\"btn\":\"Contact_btn__1VrmJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"Contacts_list__2AU3e\",\"item\":\"Contacts_item__1eq9_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"bar\":\"Phonebook_bar__1USYd\"};","import { useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport contactsOperations from '../../redux/contacts/operation';\r\nimport contactsSelectors from '../../redux/contacts/selectors';\r\nimport style from './Form.module.css'\r\n\r\nexport default function Form() {\r\n    const dispatch = useDispatch();\r\n    const contacts = useSelector(contactsSelectors.getContacts);\r\n    const [name, setName] = useState('');\r\n    const [number, setNumber] = useState('');\r\n    \r\n    // console.log(contacts);\r\n\r\n    const handleChange = event => {\r\n        const { name, value } = event.currentTarget;\r\n\r\n        switch (name) {\r\n            case 'name':\r\n                setName(value);\r\n                break;\r\n            \r\n            case 'number':\r\n                setNumber(value);\r\n                break;\r\n            \r\n            default:\r\n                return;\r\n        }\r\n    };\r\n\r\n    const hadleSubmit = event => {\r\n        event.preventDefault();\r\n\r\n        if (!name || !number) {\r\n            return;\r\n        }\r\n\r\n        if (contacts.map(contact => contact.name).includes(name)) {\r\n            return alert(`${name} is already in contacs.`)\r\n        }\r\n\r\n        dispatch(contactsOperations.addContact({ name, number }));\r\n        setName('');\r\n        setNumber('');\r\n    };\r\n    \r\n        return (\r\n            <form className={style.form} onSubmit={hadleSubmit}>\r\n                <label className={style.label}>\r\n                Name\r\n                <input\r\n                    className={style.input}\r\n                    type=\"text\"\r\n                    name=\"name\"\r\n                    pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n                    title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n                    required\r\n                    value={name}\r\n                    onChange={handleChange}\r\n                    // id={nameInputId}\r\n                />\r\n                </label>\r\n\r\n                <label className={style.label}>\r\n                Number\r\n                <input\r\n                    className={style.input}\r\n                    type=\"tel\"\r\n                    name=\"number\"\r\n                    pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n                    title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n                    required\r\n                    value={number}\r\n                    onChange={handleChange}\r\n                    // id={numberInpntId}\r\n                />\r\n                </label>\r\n\r\n                <button className={style.btn} typy=\"submit\">Add contact</button>\r\n            </form>\r\n        )\r\n    }","import { useDispatch, useSelector } from 'react-redux';\r\nimport { filterContact } from '..//../redux/contacts';\r\nimport contactsSelectors from '../../redux/contacts/selectors';\r\nimport styles from './Filter.module.css';\r\n\r\nconst Filter = () => {\r\n    const dispatch = useDispatch();\r\n    const filter = useSelector(contactsSelectors.getFilter);\r\n\r\n    const onChange = event => dispatch(filterContact(event.target.value));\r\n\r\n\r\nreturn (\r\n\r\n    <label className={styles.label}>Find contacts by name\r\n        <input className={styles.input} type=\"text\"  onChange={onChange} value={filter} name ='filter' />\r\n    </label>\r\n\r\n)\r\n};\r\n\r\nexport default Filter;\r\n\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport style from './Contact.module.css';\r\n\r\nconst Contact = ({name, number, onDeleteContact}) => (  \r\n    <>\r\n        <p className={style.name}>\r\n            {name}: <span>{number}</span>\r\n        </p>\r\n        <button className={style.btn} onClick={onDeleteContact}>\r\n            Delete\r\n        </button>\r\n    </>\r\n);\r\n\r\nContact.propTypes = {\r\n    name: PropTypes.string.isRequired,\r\n    number: PropTypes.string.isRequired,\r\n    onDeleteContact: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Contact;","import React from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport {contactsOperations, contactsSelectors } from '../../redux/contacts';\r\nimport Contact from '../Contact/Contact';\r\nimport style from './Contacts.module.css'\r\n\r\n\r\nconst Contacts = () => {\r\n    const dispatch = useDispatch();\r\n    const contacts = useSelector(contactsSelectors.getVisibleContacts);\r\n    const onDeleteContact = id => dispatch(contactsOperations.deleteContact(id));\r\n\r\n    return (\r\n        <ul className={style.list}>\r\n        {contacts.map(({ id, name, number }) => (\r\n            <li key={id} className={style.item}>\r\n                <Contact\r\n                    name={name}\r\n                    number={number}\r\n                    onDeleteContact={() => onDeleteContact(id)}\r\n                    />\r\n            </li>\r\n        ))}\r\n        \r\n    </ul>\r\n    )\r\n    \r\n};\r\n\r\nexport default Contacts;","import React from 'react';\r\n\r\nconst Loader = () => {\r\n    return (\r\n    <div className=\"text-center\">\r\n        <div\r\n            style={{\r\n                borderTopColor: 'transparent',\r\n            }}\r\n            className=\"border-solid animate-spin  rounded-full border-blue-400 border-8 h-20 w-20\"\r\n            />\r\n            \r\n            ... Loading\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Loader;","import { useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport contactsOperations from '../../redux/contacts/operation';\r\nimport contactsSelector from '../../redux/contacts/selectors';\r\n\r\n\r\nimport Form from '../Form';\r\nimport Filter from '../Filter';\r\nimport Contacts from '../Contacts';\r\nimport Loader from '../Loader';\r\nimport styles from './Phonebook.module.css'\r\n\r\nexport default function Phonebook() {\r\n    const dispatch = useDispatch();\r\n    const isLoading = useSelector(contactsSelector.getLoading);\r\n\r\n    useEffect(() => {\r\n        dispatch(contactsOperations.fetchContacts());\r\n    }, [dispatch]);\r\n\r\n    return (\r\n        <div style={styles.bar}>\r\n            <h1>Phonebook</h1>\r\n            <Form />\r\n\r\n            {isLoading ? (\r\n                <>\r\n                    <h2>Contacts</h2>\r\n                    <Filter />\r\n                    <Contacts />\r\n                </>\r\n            ) : (\r\n                <Loader />\r\n            )}\r\n        </div>\r\n\r\n    )\r\n\r\n}","import { useEffect } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport Container from '../Components/Container';\r\nimport Phonebook from '../Components/Phonebook';\r\nimport { contactsOperations } from '../redux/contacts';\r\n\r\nexport default function ContactsView(params) {\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(() => dispatch(contactsOperations.fetchContacts()), [dispatch]);\r\n    \r\n    return (\r\n        <Container>\r\n            <Phonebook />\r\n        </Container>\r\n    );\r\n};"],"sourceRoot":""}