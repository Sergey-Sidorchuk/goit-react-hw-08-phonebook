{"version":3,"sources":["redux/contacts/actions.js","Components/Navigation/Navigation.module.css","Components/AuthNav/AuthNav.module.css","Components/UserMenu/UserMenu.module.css","redux/contacts/selectors.js","redux/contacts/operation.js","redux/contacts/reducer.js","Components/Container/Container.js","Components/Container/Container.module.css","Components/AppBar/AppBar.module.css","redux/auth/auth-operations.js","redux/auth/auth-selectors.js","redux/auth/auth-slice.js","Components/Navigation/Navigation.js","Components/UserMenu/defaultAvatar.png","Components/UserMenu/UserMenu.js","Components/AuthNav/AuthNav.js","Components/AppBar/AppBar.js","Components/PrivateRoute.js","Components/PublicRoute.js","App.js","redux/store.js","index.js"],"names":["fetchContactRequest","createAction","fetchContactSuccess","fetchContactError","addContactRequest","addContactSuccess","addContactError","deleteContactRequest","deleteContactSuccess","deleteContactError","filterContact","module","exports","getContacts","state","contacts","item","getFilter","filter","contactsSelectors","getError","error","getLoading","loading","getVisibleContacts","createSelector","value","normalizeFilter","toLowerCase","name","includes","contactsOperations","fetchContacts","dispatch","a","axios","get","data","addContact","number","contact","post","deleteContact","contactId","delete","createReducer","_","payload","id","response","combineReducers","Container","children","className","style","container","defaults","baseURL","token","headers","common","Authorization","register","createAsyncThunk","credentials","logIn","operations","logOut","fetchCurrentUser","thunkAPI","getState","persistedToken","auth","rejectWithValue","authSelectors","getIsLoggedIn","isLoggedIn","getUsername","user","getIsFetchingCurrent","isFetchingCurrentUser","authSlice","createSlice","initialState","email","extraReducers","authOperations","fulfilled","action","pending","rejected","Navigation","isAuthenticated","useSelector","to","exact","styles","link","activeClassName","activeLink","UserMenu","useDispatch","onLogout","useCallback","src","defaultAvatar","alt","width","avatar","type","onClick","AuthNav","AppBar","header","PrivateRoute","redirectTo","routeProps","PublicRoute","restricted","shouldRedirect","HomeView","lazy","RegisterView","LoginView","ContactsView","App","useEffect","fallback","path","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","authPersistConfig","key","storage","whitelist","store","configureStore","reducer","persistReducer","authReducer","contactsReducer","devTools","process","persistor","persistStore","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.749eae25.chunk.js","sourcesContent":["import { createAction } from \"@reduxjs/toolkit\";\n\nexport const fetchContactRequest = createAction('contacts/fetchContactRequest');\nexport const fetchContactSuccess = createAction('contacts/fetchContactSuccess');\nexport const fetchContactError = createAction('contacts/fetchContactError');\n\nexport const addContactRequest = createAction('contacts/addContactRequest');\nexport const addContactSuccess = createAction('contacts/addContactSuccess');\nexport const addContactError = createAction('contacts/addContactError');\n\nexport const deleteContactRequest = createAction('contacts/deleteContactRequest');\nexport const deleteContactSuccess = createAction('contacts/deleteContactSuccess');\nexport const deleteContactError = createAction('contacts/deleteContactError');\n\nexport const filterContact = createAction('contacts/filterContact');","// extracted by mini-css-extract-plugin\nmodule.exports = {\"link\":\"Navigation_link__3I9qM\",\"activeLink\":\"Navigation_activeLink__HZuEh\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"link\":\"AuthNav_link__1QVjm\",\"activeLink\":\"AuthNav_activeLink__Yq24b\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"UserMenu_container__1Xc5y\",\"avatar\":\"UserMenu_avatar__3Ctlz\",\"name\":\"UserMenu_name__23qZ0\"};","import { createSelector } from '@reduxjs/toolkit';\n\nconst getContacts = state => state.contacts.item;\nconst getFilter = state => state.contacts.filter;\nconst getError = state => state.contacts.error;\nconst getLoading = state => state.contacts.loading;\n\nconst getVisibleContacts = createSelector(\n    [getContacts, getFilter],\n    (contacts, value) => {\n        const normalizeFilter = value.toLowerCase();\n        return contacts.filter(({name}) =>\n            name.toLowerCase().includes(normalizeFilter),\n        );\n    },\n);\n\nconst contactsSelectors = {\n    getContacts,\n    getFilter,\n    getError,\n    getLoading,\n    getVisibleContacts,\n};\n\nexport default contactsSelectors;","import axios from 'axios';\nimport {\n    addContactError,\n    addContactRequest,\n    addContactSuccess,\n    deleteContactError,\n    deleteContactRequest,\n    deleteContactSuccess,\n    fetchContactError,\n    fetchContactRequest,\n    fetchContactSuccess\n} from './actions';\n\n\nconst fetchContacts = () => async dispatch => {\n    dispatch(fetchContactRequest());\n\n    try {\n        const { data } = await axios.get('/contacts');\n\n        dispatch(fetchContactSuccess(data));\n    }\n    catch (error) {\n        dispatch(fetchContactError(error));\n    }\n\n};\n\nconst addContact = ({ name, number }) => async dispatch => {\n    const contact = {\n        name,\n        number,\n    };\n\n    dispatch(addContactRequest());\n\n    try {\n        const { data } = await axios.post(`/contacts`, contact);\n\n        dispatch(addContactSuccess(data));\n    }\n    catch (error) {\n        dispatch(addContactError(error));\n    }\n\n   \n};\n\nconst deleteContact = contactId => async dispatch => {\n    dispatch(deleteContactRequest());\n\n    try {\n        await axios.delete(`/contacts/${contactId}`);\n        dispatch(deleteContactSuccess(contactId));\n    } catch (error) {\n        dispatch(deleteContactError(error));\n    }\n\n};\n\nconst contactsOperations = {\n    fetchContacts,\n    addContact,\n    deleteContact,\n};\n\nexport default contactsOperations;","import { combineReducers } from 'redux';\nimport { createReducer } from '@reduxjs/toolkit';\nimport {\n    addContactError,\n    addContactRequest,\n    addContactSuccess,\n    deleteContactError,\n    deleteContactRequest,\n    deleteContactSuccess,\n    fetchContactError,\n    fetchContactRequest,\n    fetchContactSuccess,\n    filterContact,\n} from './actions';\n\nconst item = createReducer([], {\n    [fetchContactSuccess]: (_, { payload }) => payload,\n    [addContactSuccess]: (state, { payload }) => [...state, payload],\n    [deleteContactSuccess]: (state, { payload }) => state.filter(({id}) => id !== payload),\n});\n\nconst filter = createReducer('', {\n    [filterContact]: (_, { payload }) => payload,\n});\n\nconst loading = createReducer(false, {\n    [fetchContactRequest]: () => true,\n    [fetchContactSuccess]: () => false,\n    [fetchContactError]: () => false,\n    [addContactRequest]: () => true,\n    [addContactSuccess]: () => false,\n    [addContactError]: () => false,\n    [deleteContactSuccess]: () => false,\n    [deleteContactRequest]: () => true,\n    [deleteContactError]: () => false,\n});\n\nconst error = createReducer(null, {\n    [fetchContactRequest]: () => null,\n    [fetchContactError]: (_, { payload }) => payload.response.data,\n    [addContactRequest]: () => null,\n    [addContactError]: (_, { payload }) => payload.response.data,\n    [deleteContactRequest]: () => null,\n    [deleteContactError]: (_, { payload }) => payload.response.data,\n\n});\n\nexport default combineReducers({\n    item,\n    filter,\n    loading,\n    error,\n});","import React from 'react';\nimport style from'./Container.module.css';\n\nconst Container = ({ children }) => <div className={style.container}>{children}</div>;\n\nexport default Container;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Container_container__zH1DT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"AppBar_header__3FCay\"};","import axios from 'axios';\nimport { createAsyncThunk } from '@reduxjs/toolkit';\n\naxios.defaults.baseURL = 'https://connections-api.herokuapp.com';\n\nconst token = {\n  set(token) {\n    axios.defaults.headers.common.Authorization = `Bearer ${token}`;\n  },\n  unset() {\n    axios.defaults.headers.common.Authorization = '';\n  },\n};\n\n/*\n * POST @ /users/signup\n * body { name, email, password }\n *\n * После успешной регистрации добавляем токен в HTTP-заголовок\n */\nconst register = createAsyncThunk('auth/register', async credentials => { \n  try {\n    const { data } = await axios.post('/users/signup', credentials);\n    \n    token.set(data.token);\n    return data;\n  } catch (error) {\n    // dispatch(registerError(error.message));\n  }\n});\n\n/*\n * POST @ /users/login\n * body:\n *    { email, password }\n *\n * После успешного логина добавляем токен в HTTP-заголовок\n */\nconst logIn = createAsyncThunk('ayth/login', async credentials => {\n  try {\n    const {data} = await axios.post('/users/login', credentials);\n\n    token.set(data.token);\n    return data;\n  } catch (error) {\n    // dispatch(loginError(error.message));\n  }\n});\n\n/*\n * POST @ /users/logout\n * headers: Authorization: Bearer token\n * После успешного логаута, удаляем токен из HTTP-заголовка\n */\nconst logOut = createAsyncThunk('auth/logout', async () => { \n  try {\n    await axios.post('/users/logout');\n\n    token.unset();\n  } catch (error) {\n    // dispatch(logoutError(error.message));\n  }\n});\n\n/*\n * GET @ /users/current\n * headers: Authorization: Bearer token\n *\n * 1. Забираем токен из стейта через getState()\n * 2. Если токена нет, выходим не выполняя никаких операций\n * 3. Если токен есть, добавляет его в HTTP-заголовок и выполянем операцию\n */\nconst fetchCurrentUser = createAsyncThunk(\n  'auth/refresh',\n  async (_, thunkAPI) => {\n    const state = thunkAPI.getState();\n    const persistedToken = state.auth.token;\n    \n    if (persistedToken === null) {\n    // console.log('Токена нет, уходим из fetchCurrentUser')\n    return thunkAPI.rejectWithValue();\n  }\n\n  token.set(persistedToken);\n  try {\n    const {data} = await axios.get('/users/current');\n    return data;\n  } catch (error) {\n    // dispatch(getCurrentUserError(error.message));\n  }\n  });\n\n  const operations = {\n  register,\n  logOut,\n  logIn,\n  fetchCurrentUser,\n};\nexport default operations;\n","const getIsLoggedIn = state => state.auth.isLoggedIn;\n\nconst getUsername = state => state.auth.user.name;\n\nconst getIsFetchingCurrent = state => state.auth.isFetchingCurrentUser;\n\nconst authSelectors = {\n    getIsLoggedIn,\n    getUsername,\n    getIsFetchingCurrent,\n};\nexport default authSelectors;","import { createSlice } from '@reduxjs/toolkit';\nimport authOperations from './auth-operations';\n\nconst initialState = {\n  user: { name: null, email: null },\n  token: null,\n  isLoggedIn: false,\n  isFetchingCurrentUser: false,\n};\n\nconst authSlice = createSlice({\n  name: 'auth',\n  initialState,\n  extraReducers: {\n    [authOperations.register.fulfilled](state, action) {\n      state.user = action.payload.user;\n      state.token = action.payload.token;\n      state.isLoggedIn = true;\n    },\n    [authOperations.logIn.fulfilled](state, action) {\n      state.user = action.payload.user;\n      state.token = action.payload.token;\n      state.isLoggedIn = true;\n    },\n    [authOperations.logOut.fulfilled](state) {\n      state.user = { name: null, email: null };\n      state.token = null;\n      state.isLoggedIn = false;\n    },\n    [authOperations.fetchCurrentUser.pending](state) {\n      state.isFetchingCurrentUser = true;\n    },\n    [authOperations.fetchCurrentUser.fulfilled](state, action) {\n      state.user = action.payload;\n      state.isLoggedIn = true;\n      state.isFetchingCurrentUser = false;\n    },\n    [authOperations.fetchCurrentUser.rejected](state) {\n      state.isFetchingCurrentUser = false;\n    },\n  },\n});\n\nexport default authSlice.reducer;","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport { NavLink } from 'react-router-dom';\nimport { authSelectors } from '../../redux/auth';\nimport styles from './Navigation.module.css';\n\nexport default function Navigation() {\n    const isAuthenticated = useSelector(authSelectors.getIsLoggedIn);\n    return (\n        <nav>\n            <NavLink\n                to=\"/\"\n                exact\n                 className={styles.link}\n                activeClassName={styles.activeLink}>\n                Home page\n            </NavLink>\n\n            {isAuthenticated && (\n                <NavLink\n                    to=\"/contacts\"\n                    exact\n                    className={styles.link}\n                    activeClassName={styles.activeLink}\n                >\n                    Contacts\n                </NavLink>\n            )}\n        </nav>\n    )};\n\n","export default __webpack_public_path__ + \"static/media/defaultAvatar.1b18c63f.png\";","import { useCallback } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { authSelectors, authOperations } from '../../redux/auth';\nimport defaultAvatar from './defaultAvatar.png';\nimport styles from './UserMenu.module.css';\n\nexport default function UserMenu() {\n    const dispatch = useDispatch();\n    const name = useSelector(authSelectors.getUsername);\n    const onLogout = useCallback(() => dispatch(authOperations.logOut()), [dispatch]);\n\n    return (\n        <div className={styles.container}>\n            <img src={defaultAvatar} alt=\"avatar\" width=\"32\" className={styles.avatar} />\n            <span className={styles.name}>Welcome, {name}</span>\n            \n            <button type=\"button\" onClick={onLogout}>\n                Exit\n            </button>\n        </div>\n    );\n};","import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport styles from './AuthNav.module.css';\n\nexport default function AuthNav() {\n    return (\n        <div>\n            <NavLink\n                to=\"/register\"\n                exact\n                className={styles.link}\n                activeClassName={styles.activeLink}\n            >\n            Sign up\n            </NavLink>\n\n            <NavLink\n                to=\"/login\"\n                exact\n                className={styles.link}\n                activeClassName={styles.activeLink}\n            >\n            Sign in\n            </NavLink>\n        </div>\n    );\n};","import { useSelector } from 'react-redux';\nimport Navigation from '../Navigation';\nimport UserMenu from '../UserMenu';\nimport AuthNav from '../AuthNav';\nimport { authSelectors } from '../../redux/auth';\n\nimport styles from './AppBar.module.css';\n\nexport default function AppBar() {\n    const isAuthenticated = useSelector(authSelectors.getIsLoggedIn);\n    \n    return (\n    <header className={styles.header}>\n        <Navigation />\n            {isAuthenticated ? <UserMenu /> : <AuthNav />}\n    </header>\n    );\n};","import { useSelector } from 'react-redux';\nimport { Route, Redirect } from 'react-router-dom';\nimport { authSelectors } from '../redux/auth';\n\n\nexport default function PrivateRoute({\n    children,\n    redirectTo = '/',\n    ...routeProps\n}) {\n    const isLoggedIn = useSelector(authSelectors.getIsLoggedIn);\n    \n        return (\n            <Route {...routeProps}>\n        \n                {isLoggedIn ? children : <Redirect to={redirectTo} />}\n            \n            </Route>\n    );\n}","import { useSelector } from 'react-redux';\nimport { Route, Redirect } from 'react-router-dom';\nimport { authSelectors } from '../redux/auth';\n\n\nexport default function PublicRoute({\n    children,\n    restricted = false,\n    redirectTo = '/',\n    ...routeProps\n}) {\n    const isLoggedIn = useSelector(authSelectors.getIsLoggedIn);\n    const shouldRedirect = isLoggedIn && restricted;\n        return (\n    \n            <Route {...routeProps}>\n                \n                {shouldRedirect ? <Redirect to={redirectTo} /> : children}\n            \n            </Route>\n    );\n}","import { useEffect, Suspense, lazy } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Switch } from 'react-router-dom';\nimport Container from './Components/Container';\nimport AppBar from './Components/AppBar';\nimport PrivateRoute from './Components/PrivateRoute';\nimport PublicRoute from './Components/PublicRoute';\nimport { authOperations, authSelectors } from './redux/auth';\n\nconst HomeView = lazy(() => import('./views/HomeView'));\nconst RegisterView = lazy(() => import('./views/RegisterView'));\nconst LoginView = lazy(() => import('./views/LoginView'));\nconst ContactsView = lazy(() => import('./views/ContactsView'));\n\n\nexport default function App() {\n  const dispatch = useDispatch();\n  const isFetchingCurrentUser = useSelector(authSelectors.getIsFetchingCurrent);\n\n\n  useEffect(() => {\n    dispatch(authOperations.fetchCurrentUser());\n    }, [dispatch]);\n\n  return (\n    <Container>\n      {isFetchingCurrentUser ? (\n        <h1>Показываем React Skeleton</h1>\n      ) : (\n        <>\n          <AppBar />\n\n          <Switch>\n\n            <Suspense fallback={<h2>Loading...</h2>}>\n              \n              <PublicRoute exact path=\"/\">\n                <HomeView />\n              </PublicRoute>\n              <PublicRoute exact path=\"/register\" restricted>\n                <RegisterView />\n              </PublicRoute>\n              <PublicRoute exact path=\"/login\" redirectTo=\"/contacts\" restricted>\n                <LoginView />\n              </PublicRoute>\n              <PrivateRoute path=\"/contacts\" redirectTo=\"/login\">\n                <ContactsView />\n              </PrivateRoute>\n              \n            </Suspense>\n\n          </Switch>\n        </>\n      )}\n    </Container>\n  )\n};","import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\nimport {\n    persistStore,\n    persistReducer,\n    FLUSH,\n    REHYDRATE,\n    PAUSE,\n    PERSIST,\n    PURGE,\n    REGISTER,\n} from 'redux-persist';\nimport storage from 'redux-persist/lib/storage';\nimport { contactsReducer } from './contacts';\nimport { authReducer } from './auth';\n\n\nconst middleware = [\n    ...getDefaultMiddleware({\n        serializableCheck: {\n            ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n        },\n    }),\n];\n\nconst authPersistConfig = {\n    key: 'auth',\n    storage,\n    whitelist: ['token'],\n};\n\nexport const store = configureStore({\n    reducer: {\n        auth: persistReducer(authPersistConfig, authReducer),\n        contacts: contactsReducer,\n    },\n    middleware,\n    devTools: process.env.NODE_ENV === \"development\",\n});\n\nexport const persistor = persistStore(store);","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport { PersistGate } from 'redux-persist/integration/react';\nimport './index.css';\nimport App from './App';\nimport { store, persistor } from './redux/store'\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <PersistGate loading={null} persistor={persistor}>\n        <BrowserRouter>\n          <App />\n        </BrowserRouter>\n      </PersistGate>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}